$breakpoints: (
    phone-small:  300px,
    phone:        400px,
    phone-wide:   480px,
    phablet:      560px,
    tablet-small: 640px,
    tablet:       768px,
    tablet-wide:  1024px,
    desktop:      1280px,
    desktop-wide: 1440px
);
@mixin mq-min($width, $type: min) {
    @if map_has_key($breakpoints, $width) {
        $width: map_get($breakpoints, $width);
        @if $type == max {
            $width: $width - 1px;
        }
        @media only screen and (#{$type}-width: $width) {
            @content;
        }
    }
}
@mixin mq-max($width, $type: max) {
  @if map_has_key($breakpoints, $width) {
      $width: map_get($breakpoints, $width);
      @if $type == max {
          $width: $width - 1px;
      }
      @media only screen and (#{$type}-width: $width) {
          @content;
      }
  }
}
@mixin respond-between($lower, $upper) {
    @if map-has-key($breakpoints, $lower) and map-has-key($breakpoints, $upper) {
      $lower-breakpoint: map-get($breakpoints, $lower);
      $upper-breakpoint: map-get($breakpoints, $upper);
      @media (min-width: $lower-breakpoint) and (max-width: ($upper-breakpoint - 1)) {
        @content;
      }
    } @else {
      @if (map-has-key($breakpoints, $lower) == false) {
        @warn 'Your lower breakpoint was invalid: #{$lower}.';
      }
      @if (map-has-key($breakpoints, $upper) == false) {
        @warn 'Your upper breakpoint was invalid: #{$upper}.';
      }
    }
  }

  //TRANSITIONS
  @mixin transition($transition...) {
    -moz-transition:    $transition;
    -o-transition:      $transition;
    -webkit-transition: $transition;
    transition:         $transition;
}
@mixin transition-property($property...) {
    -moz-transition-property:    $property;
    -o-transition-property:      $property;
    -webkit-transition-property: $property;
    transition-property:         $property;
}
@mixin transition-duration($duration...) {
    -moz-transition-property:    $duration;
    -o-transition-property:      $duration;
    -webkit-transition-property: $duration;
    transition-property:         $duration;
}
@mixin transition-timing-function($timing...) {
    -moz-transition-timing-function:    $timing;
    -o-transition-timing-function:      $timing;
    -webkit-transition-timing-function: $timing;
    transition-timing-function:         $timing;
}
@mixin transition-delay($delay...) {
    -moz-transition-delay:    $delay;
    -o-transition-delay:      $delay;
    -webkit-transition-delay: $delay;
    transition-delay:         $delay;
}